
interface I {
    foo: Int,
    bar: String
}

struct S1 : I {
    foo: Int,
    p: Int,
    bar: String
}

struct S2 : I {
    bar: String,
    foo: Int
}

package Test {

    fn testF(a: Bool) -> Int {
        val x: I = when a then new S1(15, -8, "Hello") else new S2("Bonjour", 955);
        return f(x.foo, len x.bar);
    }
    
    fn f(i: Int, j: Int) -> Int {
        return 9*i - j*j;
    }

    main fn test(arr String){
        printI(testF(true));
        printI(testF(false));
    }

    fn printI(i: Int){
        print(intToString(i) + "\n");
    }

}
