
package Test {

    fn testFunc(xs: arr Double, action: String) -> Double {
        return
        when action == "min" then Arrays.arrayMin(xs)
        else when action == "max" then Arrays.arrayMax(xs)
        else Error.error("unknown action " + action)
    }

    main fn test(arr String){
        val array1 = [12.7, 9.47, 11.2, 15.8, 19.8];
        printD(testFunc(array1, "max"));
        printD(testFunc(array1, "min"));
        val array2 = [74.82, -71.68, -11.45, 15.21, 9.999, -9.999];
        printD(testFunc(array2, "max"));
        printD(testFunc(array2, "min"));
    }

    fn printD(d: Double){
        console.print(d as String + "\n");
    }

}

package Error {

    fn error(msg: String) -> Nothing {
        panic msg
    }

}

package Arrays {

    fn arrayMax(xs: arr Double) -> Double {
        if len xs == 0 {
            panic "max of empty array"
        };
        var max = xs[0];
        for var idx = 1; idx < len xs; idx += 1 {
            max = MinMax.max(max, xs[idx])
        };
        return when len xs == 0 then Error.error("") else max
    }

    fn arrayMin(xs: arr Double) -> Double {
        if len xs == 0 {
            panic "min of empty array"
        };
        var min = xs[0];
        for var idx = 1; idx < len xs; idx += 1 {
            min = MinMax.min(min, xs[idx])
        };
        return min
    }

}

package MinMax {

    fn min(a: Double, b: Double) -> Double {
        return when b < a then b else a
    }

    fn max(a: Double, b: Double) -> Double {
        return when b > a then b else a
    }

}
