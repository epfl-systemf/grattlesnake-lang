
module Checked(#package Unchecked, #package Abc) {

    fn foo() {
        Unchecked.doDangerousThings();  //> E : cannot invoke function doDangerousThings, as its receiver is marked and the invocation occurs outside of an enclosure
    }

    fn getUnchecked() -> Unchecked {
        return Unchecked;               //> E : returned value: expected 'Unchecked', found 'Unchecked^#'
    }

    fn bar() -> Bar {
        return new Bar(100);            // OK (since structs provide no encapsulation)
    }

    fn abc() -> Abc {
        restricted {Abc} {
            return Abc;                 //> E : returned value: expected 'Abc', found 'Abc^#'
        }
    }

}
