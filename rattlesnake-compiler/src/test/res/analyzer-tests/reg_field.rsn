
package Main {

    fn mkBar(r: Region^) -> Bar^{r} {
        val f = new@r Foo(10);
        val b = new@r Bar(f);
        return b
    }

    fn mkBarBad(r: Region^, s: Region^) -> Bar^{r, s} {
        val f = new@r Foo(10);
        val b = new@s Bar(f);   //> E : expected 'Foo^{s}', found 'Foo^{r}'
        return b
    }

}

struct Foo {
    var i: Int
}

struct Bar {
    var f: Foo^{reg}
}
