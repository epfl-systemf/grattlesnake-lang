
package Main {

    main fn run(arr String){
        val r = newreg;
        val l1 = new@r Leaker1(mkNull());
        val l2: Leaker2^{r};
        enclosed {} {
            l2 = new@r Leaker2(#mkNull());  //> E : expected 'Leaker2^{r}', found 'Leaker2^#'
            Unsafe.leak1(#l1);
            Unsafe.leak2(#l2);
        };
        l1.f.openW("f1.txt");
        l2.f.openW("f2.txt");   //> E : cannot invoke function openW, as its receiver is marked and the invocation occurs outside of an enclosure
    }

    private fn mkNull() -> FileSystem {
        return (arr@newreg FileSystem[1])[0];
    }

}

mut struct Leaker1 {
    var f: FileSystem
}
